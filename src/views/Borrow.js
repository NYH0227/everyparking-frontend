import React, { useEffect, useState } from "react";import MapShowList from "../components/kakaoMap/MapShowList";import ParkingService from "../service/ParkingService";import { MDBAccordion, MDBAccordionItem, MDBBadge, MDBTable, MDBTableBody, MDBTableHead } from "mdb-react-ui-kit";import { CButton, CFormInput, CFormLabel } from "@coreui/react";import DatePicker from "react-datepicker";const { kakao } = window;const Borrow = () => {  // 주변 거리 비례해서 출력  // 이용 시간 받기  const [myCars, setMyCars] = useState([]);  const [carId, setCarId] = useState()  const [startTime, setStartTime] = useState(new Date())  const [nowLocation, setNowLocation] = useState()  const [myMapX, setMyMapX] = useState()  const [myMapY, setMyMapY] = useState()  useEffect(()=>{    ParkingService.getMyCar()      .then((res) => {        setMyCars(res.data.data);        console.log(res.data)      })  },[])  useEffect(() => {    kakaoComponent()  },[myMapX])  const handleSearchOnClick = () => {    // 차종, 시간, 내 위치 전송    // map(X,y)    console.log(myMapY,myMapX)  }  const kakaoComponent = () => {    var mapContainer = document.getElementById('selectMap'), // 지도를 표시할 div      mapOption = {        center: new kakao.maps.LatLng(myMapY, myMapX), // 지도의 중심좌표        level: 3 // 지도의 확대 레벨      };    var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다    if (navigator.geolocation) {      navigator.geolocation.getCurrentPosition(function(position) {        var lat = position.coords.latitude, // 위도          lon = position.coords.longitude; // 경도        setMyMapY(lat)        setMyMapX(lon)        var locPosition = new kakao.maps.LatLng(lat, lon), // 마커가 표시될 위치를 geolocation으로 얻어온 좌표로 생성합니다          message = '<div style="padding:5px;">여기에 계신가요?!</div>'; // 인포윈도우에 표시될 내용입니다        // 마커와 인포윈도우를 표시합니다        displayMarker(locPosition, message);      });    } else { // HTML5의 GeoLocation을 사용할 수 없을때 마커 표시 위치와 인포윈도우 내용을 설정합니다      var locPosition = new kakao.maps.LatLng(33.450701, 126.570667),        message = 'geolocation을 사용할수 없어요..'      displayMarker(locPosition, message);    }    function displayMarker(locPosition, message) {      // 마커를 생성합니다      var marker = new kakao.maps.Marker({        map: map,        position: locPosition      });      var iwContent = message, // 인포윈도우에 표시할 내용        iwRemoveable = true;      // 인포윈도우를 생성합니다      var infowindow = new kakao.maps.InfoWindow({        content : iwContent,        removable : iwRemoveable      });      // 인포윈도우를 마커위에 표시합니다      infowindow.open(map, marker);      // 지도 중심좌표를 접속위치로 변경합니다      map.setCenter(locPosition);    }  }  return (    <div>      <MDBAccordion flush initialActive={0}>        <MDBAccordionItem collapseId={1} headerTitle="조건 선택">          <MDBTable align="middle">            <MDBTableHead>              <tr>                <th scope="col">내 차 모델</th>                <th scope="col">차 번호</th>                <th scope="col">차 종</th>                <th scope="col">Actions</th>              </tr>            </MDBTableHead>            <MDBTableBody>              {myCars &&                myCars.map((item, idx) =>                  <tr key={item.idx} id={item.idx}>                    <td>                      <p className="fw-normal mb-1">{item.carModel}</p>                    </td>                    <td>                      <p className="fw-normal mb-1">{item.carNumber}</p>                    </td>                    <td>                      <p className="fw-normal mb-1">{item.carSize}</p>                    </td>                    <td>                      {idx == carId ?                        <CButton color="info" value={idx} onClick={(e) => setCarId(e.target.value)}>선택중</CButton>                        :                        <CButton color="success" value={idx}                                 onClick={(e) => {                                   setCarId(e.target.value);                                 }}>선택</CButton>                      }                    </td>                  </tr>)}            </MDBTableBody>          </MDBTable>          <div className="mb-2">            <CFormInput type="text" placeholder="내 위치" value={nowLocation} onChange={(e) => {              setNowLocation(e.target.value);            }} />          </div>          <div className="mb-2">            <DatePicker              selected={startTime}              onChange={(date) => setStartTime(date)}              locale="pt-BR"              showTimeSelect              timeFormat="p"              timeIntervals={60}              dateFormat="MM월 dd일 h:mm aa"            />          </div>          <CButton color="success" onClick={handleSearchOnClick}>검색하기</CButton>        </MDBAccordionItem>        <MDBAccordionItem collapseId={2} headerTitle="검색 결과">          {console.log(myMapY,myMapX)}          <div>            <div id='selectMap' style={{              width: '100%',              height: '300px',              margin: 'auto'            }}></div>          </div>        </MDBAccordionItem>      </MDBAccordion>    </div>  );}export default Borrow;