{"version":3,"file":"static/js/714.7df1d4fd.chunk.js","mappings":"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","sources":["service/ParkingService.js","views/MyPlace.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const SERVER_PATH = \"http://192.168.50.181:7777\"\nexport const CLIENT_PATH = \"http://192.168.241.181:3000\"\n\n\nclass ParkingService {\n\n    /** 도시 리스트 받아오기 */\n    getCities(){\n        return axios.get(SERVER_PATH+\"/api\")\n    }\n\n    /** 차종(소,중,대 받아오기) */\n    getCarType() {\n      return axios.get(SERVER_PATH + \"/api/car\");\n    }\n\n    /** 개인이 들고있는 장소 조회하기 */\n    getPlaces(){\n      return axios.get(SERVER_PATH+\"/api\",{\n        headers :{\n          'Authorization' : localStorage.getItem(\"jwt\").toString(),\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n\n    /** 차 등록 */\n    postAddCar(carNumber, carModel,carSize){\n      console.log(carSize)\n       return axios.post(SERVER_PATH + \"/api/car\", {\n         \"carModel\" : carModel,\n         \"carNumber\" : carNumber,\n         \"size\" : carSize\n       },{\n         headers :{\n           'Authorization' : localStorage.getItem(\"jwt\").toString(),\n           'Content-Type': 'application/json'\n         }\n       })\n    }\n\n    /** 장소 등록 */\n    postAddPlace(mapAddr,x_pos,y_pos,message,placeName){\n      // 현재 검색한 주소를 가지고 도로명 주소로 변환하기\n      // 도로명 주소를 mapAddr에 넣은 후 서버로 통신하면 성공.\n\n      return axios.post(SERVER_PATH + \"/api/place\", {\n        \"mapAddr\": mapAddr,\n        \"mapX\": x_pos,\n        \"mapY\": y_pos,\n        \"message\": message,\n        \"placeName\": placeName\n      },{\n        headers :{\n          'Authorization' : localStorage.getItem(\"jwt\").toString(),\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n\n    /** 회원가입 */\n    postSignUp(city,email,nickname,password,tel){\n        return axios.post(SERVER_PATH+\"/api/users\", {\n                \"city\": city,\n                \"email\": email,\n                \"introduce\": \"안녕하세요\",\n                \"nickname\": nickname,\n                \"password\": password,\n                \"tel\": tel\n            })\n\n    }\n    /** 로그인 */\n    postSignIn(email,password){\n        return axios.post(SERVER_PATH+\"/api/users/login\",{\n            \"email\": email,\n            \"password\": password\n        })\n    }\n}\n\nexport default new ParkingService();","import React, { useEffect, useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CRow, CFormTextarea, CInputGroup\n} from \"@coreui/react\";\nimport ParkingService from \"../service/ParkingService\";\nimport Swal from \"sweetalert2\";\nconst { kakao } = window;\n\n\nconst MyPlace = () => {\n\n  const [placeName,setPlaceName] = useState()\n  const [mapAddr,setMapAddr] = useState()\n  const [message,setMessage] = useState()\n  const [input, setInput] = useState()\n\n  const [x_pos,setX] = useState(0.0)\n  const [y_pos,setY] = useState(0.0)\n  const [text,setText] = useState()\n\n\n  useEffect(() => {\n    var mapContainer = document.getElementById('myMap'),\n      mapOption = {\n        center: new kakao.maps.LatLng(37.4788363460667, 126.753432165028),\n        level: 4 // 지도의 확대 레벨\n      };\n\n    var map = new kakao.maps.Map(mapContainer, mapOption);\n\n    var geocoder = new kakao.maps.services.Geocoder();\n    geocoder.addressSearch( input , function (result, status) {\n\n      console.log(result[0].x, result[0].y)\n\n      setX(result[0].x)\n      setY(result[0].y)\n\n      if (status === kakao.maps.services.Status.OK) {\n        var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n\n        var callback = function(result, status) {\n          if (status === kakao.maps.services.Status.OK) {\n            console.log(\"주소는\",result[0].address.address_name);\n            setMapAddr(result[0].address.address_name)\n          }\n        };\n        geocoder.coord2Address(coords.getLng(), coords.getLat(), callback);\n\n        var marker = new kakao.maps.Marker({\n          map: map,\n          position: coords\n        });\n\n        map.setCenter(coords);\n\n      }\n    });\n  }, [input]);\n\n  const handleAddPlace = () => {\n    ParkingService.postAddPlace(mapAddr,x_pos,y_pos,message,placeName)\n      .then((res) => {\n        console.log(mapAddr)\n        console.log(res.data)\n        Swal.fire(res.data.message,\"\",\"success\")\n\n        setMapAddr(\"\")\n        setMessage(\"\")\n        placeName(\"\")\n      })\n      .catch((err) => console.log(err.response))\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>내 주차공간 등록</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n              주소\n            </CFormLabel>\n\n            <>\n              <div id='myMap' style={{\n                width: '100%',\n                height: '300px',\n                margin: 'auto'\n              }}></div>\n              <br/>\n              <CInputGroup className=\"mb-3\">\n                <CButton type=\"button\" color=\"dark\" onClick={() => setInput(text)} variant=\"outline\" id=\"button-addon1\">주소검색</CButton>\n                <CFormInput placeholder=\"무네미로 448번길\" value={text} onChange={(e) => setText(e.target.value)} aria-label=\"Example text with button addon\" aria-describedby=\"button-addon1\"/>\n              </CInputGroup>\n              <br/>\n            </>\n\n            <CForm validated={true}>\n\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                  주소\n                </CFormLabel>\n                <CFormInput type=\"text\" value={mapAddr} disabled></CFormInput>\n              </div>\n\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                  별칭\n                </CFormLabel>\n                <CFormInput placeholder=\"우리집\" type=\"text\" value={placeName} onChange={(e) => setPlaceName(e.target.value)}  ></CFormInput>\n                <CFormFeedback invalid>별칭을 입력해주세요</CFormFeedback>\n              </div>\n\n              <div className=\"mb-3\">\n                <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                  주의사항\n                </CFormLabel>\n                <CFormTextarea id=\"floatingTextarea\"\n                               placeholder=\"comment\" value={message} onChange={(e) => setMessage(e.target.value)} ></CFormTextarea>\n                <CFormFeedback invalid>주의사항을 남겨주세요</CFormFeedback>\n              </div>\n\n              <div className=\"mb-3\">\n                <CButton color=\"primary\" onClick={handleAddPlace}>\n                  장소 등록하기\n                </CButton>\n              </div>\n            </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default MyPlace;\n"],"names":["SERVER_PATH","ParkingService","axios","headers","localStorage","getItem","toString","carNumber","carModel","carSize","console","log","mapAddr","x_pos","y_pos","message","placeName","city","email","nickname","password","tel","kakao","window","useState","setPlaceName","setMapAddr","setMessage","input","setInput","setX","setY","text","setText","useEffect","mapContainer","document","getElementById","mapOption","center","maps","LatLng","level","map","Map","geocoder","services","Geocoder","addressSearch","result","status","x","y","Status","OK","coords","coord2Address","getLng","getLat","address","address_name","Marker","position","setCenter","xs","className","htmlFor","id","style","width","height","margin","type","color","onClick","variant","placeholder","value","onChange","e","target","validated","disabled","invalid","then","res","data","Swal","catch","err","response"],"sourceRoot":""}