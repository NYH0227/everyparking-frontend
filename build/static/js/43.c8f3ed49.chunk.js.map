{"version":3,"file":"static/js/43.c8f3ed49.chunk.js","mappings":"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","sources":["service/ParkingService.js","views/SignUp.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const SERVER_PATH = \"http://192.168.50.181:7777\"\nexport const CLIENT_PATH = \"http://192.168.241.181:3000\"\n\n\nclass ParkingService {\n\n    /** 도시 리스트 받아오기 */\n    getCities(){\n        return axios.get(SERVER_PATH+\"/api\")\n    }\n\n    /** 차종(소,중,대 받아오기) */\n    getCarType() {\n      return axios.get(SERVER_PATH + \"/api/car\");\n    }\n\n    /** 개인이 들고있는 장소 조회하기 */\n    getPlaces(){\n      return axios.get(SERVER_PATH+\"/api\",{\n        headers :{\n          'Authorization' : localStorage.getItem(\"jwt\").toString(),\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n\n    /** 차 등록 */\n    postAddCar(carNumber, carModel,carSize){\n      console.log(carSize)\n       return axios.post(SERVER_PATH + \"/api/car\", {\n         \"carModel\" : carModel,\n         \"carNumber\" : carNumber,\n         \"size\" : carSize\n       },{\n         headers :{\n           'Authorization' : localStorage.getItem(\"jwt\").toString(),\n           'Content-Type': 'application/json'\n         }\n       })\n    }\n\n    /** 장소 등록 */\n    postAddPlace(mapAddr,x_pos,y_pos,message,placeName){\n      // 현재 검색한 주소를 가지고 도로명 주소로 변환하기\n      // 도로명 주소를 mapAddr에 넣은 후 서버로 통신하면 성공.\n\n      return axios.post(SERVER_PATH + \"/api/place\", {\n        \"mapAddr\": mapAddr,\n        \"mapX\": x_pos,\n        \"mapY\": y_pos,\n        \"message\": message,\n        \"placeName\": placeName\n      },{\n        headers :{\n          'Authorization' : localStorage.getItem(\"jwt\").toString(),\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n\n    /** 회원가입 */\n    postSignUp(city,email,nickname,password,tel){\n        return axios.post(SERVER_PATH+\"/api/users\", {\n                \"city\": city,\n                \"email\": email,\n                \"introduce\": \"안녕하세요\",\n                \"nickname\": nickname,\n                \"password\": password,\n                \"tel\": tel\n            })\n\n    }\n    /** 로그인 */\n    postSignIn(email,password){\n        return axios.post(SERVER_PATH+\"/api/users/login\",{\n            \"email\": email,\n            \"password\": password\n        })\n    }\n}\n\nexport default new ParkingService();","import {useEffect, useState} from \"react\";\nimport Swal from \"sweetalert2\";\nimport ParkingService from \"../service/ParkingService\";\nimport React from 'react'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormFeedback,\n  CFormInput,\n  CFormLabel, CFormSelect,\n  CRow\n} from \"@coreui/react\";\n\nfunction SignUp() {\n    const [email,setEmail] = useState()\n    const [password,setPassword] = useState()\n    const [tel,setTel] = useState()\n    const [nickname,setNickname] = useState()\n    const [city,setCity] = useState()\n    const [cities,setCities] = useState([])\n\n\n    useEffect(()=>{\n        ParkingService.getCities()\n            .then((res) => setCities(res.data))\n            .catch((err) => console.log(err))\n    },[])\n\n    const handleSignUpOnclick = () => {\n        console.log(city)\n\n        ParkingService.postSignUp(city,email,nickname,password,tel)\n            .then((res) => {\n\n                Swal.fire(res.data.message)\n                setEmail(\"\")\n                setPassword(\"\")\n                setTel(\"\")\n                setNickname(\"\")\n                setCity(\"\")\n\n            }).catch((err) => {\n                console.log(err)\n\n                Swal.fire({\n                    icon: 'error',\n                    title: '회원가입 실패',\n                    text: '회원가입 도중 오류가 발생하였습니다',\n                    footer: err.message\n                })\n            })\n\n    }\n\n\n    return (\n      <CRow>\n        <CCol xs={12}>\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>회원가입</strong>\n            </CCardHeader>\n            <CCardBody>\n              <CForm validated={true}>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    이메일\n                  </CFormLabel>\n                  <CFormInput type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} ></CFormInput>\n                  <CFormFeedback invalid>이메일을 입력해주세요</CFormFeedback>\n                </div>\n\n\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    비밀번호\n                  </CFormLabel>\n                  <CFormInput type=\"password\" minLength={8} maxLength={16} value={password} onChange={(e) => setPassword(e.target.value)}></CFormInput>\n                  <CFormFeedback invalid>비밀번호를 입력해주세요</CFormFeedback>\n                </div>\n\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    닉네임\n                  </CFormLabel>\n                  <CFormInput type=\"text\" value={nickname} onChange={(e) => setNickname(e.target.value)}></CFormInput>\n                  <CFormFeedback invalid>닉네임을 입력해주세요</CFormFeedback>\n                </div>\n\n\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    전화번호\n                  </CFormLabel>\n                  <CFormInput type=\"text\" value={tel} onChange={(e) => setTel(e.target.value)}></CFormInput>\n                  <CFormFeedback invalid>전화번호를 입력해주세요</CFormFeedback>\n                </div>\n\n\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    지역\n                  </CFormLabel>\n                  <CFormSelect onChange={(e)=> setCity(e.target.value)} required aria-label=\"select example\">\n                    <option>지역을 선택해주세요</option>\n\n                    {cities.map( (x,index) =>\n                      <option value={x} key={index}>{x}</option>\n                    )}\n\n                  </CFormSelect>\n                  <CFormFeedback invalid>Example invalid select feedback</CFormFeedback>\n                </div>\n                <div className=\"mb-3\">\n                  <CButton color=\"primary\" onClick={handleSignUpOnclick}>\n                    회원가입\n                  </CButton>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n  // <div>\n  //           <div className=\"form-outline mb-4\">\n  //               <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\"\n  //                      id=\"registerEmail\" className=\"form-control\"/>\n  //               <label className=\"form-label\" htmlFor=\"registerEmail\">Email</label>\n  //           </div>\n  //\n  //\n  //           <div className=\"form-outline mb-4\">\n  //               <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\"\n  //                      id=\"registerPassword\" className=\"form-control\"/>\n  //               <label className=\"form-label\" htmlFor=\"registerPassword\">Password</label>\n  //           </div>\n  //\n  //\n  //           <div className=\"form-outline mb-4\">\n  //               <input value={nickname} onChange={(e) => setNickname(e.target.value)} type=\"text\"\n  //                      id=\"registerNickName\" className=\"form-control\"/>\n  //               <label className=\"form-label\" htmlFor=\"registerNickName\">Nickname</label>\n  //           </div>\n  //\n  //           <div className=\"form-outline mb-4\">\n  //               <input value={tel} onChange={(e) => setTel(e.target.value)} type=\"text\" id=\"registerTel\"\n  //                      className=\"form-control\"/>\n  //               <label className=\"form-label\" htmlFor=\"registerTel\">tel</label>\n  //           </div>\n  //\n  //           <div className=\"form-outline mb-4\">\n  //               <Form.Borrow onChange={(e) => setCity(e.target.value)} aria-label=\"Default select example\">\n  //                   <option selected>선택해주세요</option>\n  //                   {\n  //                       cities.map((x, idx) =>\n  //                           <option key={idx}>{x}</option>\n  //                       )\n  //                   }\n  //               </Form.Borrow>\n  //           </div>\n  //\n  //           <div className=\"text-center mb-3\">\n  //               <p>Sign up with:</p>\n  //\n  //               <button type=\"button\"\n  //                       className=\"btn btn-link btn-floating mx-1\">\n  //                   <i className=\"fab fa-google\"></i>\n  //               </button>\n  //           </div>\n  //           <button onClick={handleSignUpOnclick} className=\"btn btn-primary btn-block mb-3\">Sign up\n  //           </button>\n  //       </div>\n    );\n}\n\nexport default SignUp;"],"names":["SERVER_PATH","ParkingService","axios","headers","localStorage","getItem","toString","carNumber","carModel","carSize","console","log","mapAddr","x_pos","y_pos","message","placeName","city","email","nickname","password","tel","useState","setEmail","setPassword","setTel","setNickname","setCity","cities","setCities","useEffect","then","res","data","catch","err","xs","className","validated","htmlFor","type","value","onChange","e","target","invalid","minLength","maxLength","required","map","x","index","color","onClick","Swal","icon","title","text","footer"],"sourceRoot":""}