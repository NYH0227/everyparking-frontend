{"version":3,"file":"static/js/699.60f18c5d.chunk.js","mappings":"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","sources":["service/ParkingService.js","views/MyCar.js"],"sourcesContent":["import axios from \"axios\";\n\nexport const SERVER_PATH = \"http://192.168.50.181:7777\"\nexport const CLIENT_PATH = \"http://192.168.241.181:3000\"\n\n\nclass ParkingService {\n\n    /** 도시 리스트 받아오기 */\n    getCities(){\n        return axios.get(SERVER_PATH+\"/api\")\n    }\n\n    /** 차종(소,중,대 받아오기) */\n    getCarType() {\n      return axios.get(SERVER_PATH + \"/api/car\");\n    }\n\n    /** 개인이 들고있는 장소 조회하기 */\n    getPlaces(){\n      return axios.get(SERVER_PATH+\"/api\",{\n        headers :{\n          'Authorization' : localStorage.getItem(\"jwt\").toString(),\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n\n    /** 차 등록 */\n    postAddCar(carNumber, carModel,carSize){\n      console.log(carSize)\n       return axios.post(SERVER_PATH + \"/api/car\", {\n         \"carModel\" : carModel,\n         \"carNumber\" : carNumber,\n         \"size\" : carSize\n       },{\n         headers :{\n           'Authorization' : localStorage.getItem(\"jwt\").toString(),\n           'Content-Type': 'application/json'\n         }\n       })\n    }\n\n    /** 장소 등록 */\n    postAddPlace(mapAddr,x_pos,y_pos,message,placeName){\n      // 현재 검색한 주소를 가지고 도로명 주소로 변환하기\n      // 도로명 주소를 mapAddr에 넣은 후 서버로 통신하면 성공.\n\n      return axios.post(SERVER_PATH + \"/api/place\", {\n        \"mapAddr\": mapAddr,\n        \"mapX\": x_pos,\n        \"mapY\": y_pos,\n        \"message\": message,\n        \"placeName\": placeName\n      },{\n        headers :{\n          'Authorization' : localStorage.getItem(\"jwt\").toString(),\n          'Content-Type': 'application/json'\n        }\n      })\n    }\n\n    /** 회원가입 */\n    postSignUp(city,email,nickname,password,tel){\n        return axios.post(SERVER_PATH+\"/api/users\", {\n                \"city\": city,\n                \"email\": email,\n                \"introduce\": \"안녕하세요\",\n                \"nickname\": nickname,\n                \"password\": password,\n                \"tel\": tel\n            })\n\n    }\n    /** 로그인 */\n    postSignIn(email,password){\n        return axios.post(SERVER_PATH+\"/api/users/login\",{\n            \"email\": email,\n            \"password\": password\n        })\n    }\n}\n\nexport default new ParkingService();","import React, { useEffect, useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n  CRow,\n} from '@coreui/react'\nimport ParkingService from \"../service/ParkingService\";\nimport Swal from \"sweetalert2\";\n\nconst MyCar = () => {\n\n  const [size,setSize] = useState([])\n  const [carNum,setCarNum] = useState()\n  const [carModel,setCarModel] = useState()\n  const [carSize,setCarSize] = useState()\n\n  useEffect(()=>{\n    ParkingService.getCarType()\n      .then((res) => setSize(res.data))\n      .catch((err) => console.log(err))\n  },[])\n\n  const handleAddCar = () => {\n    ParkingService.postAddCar(carNum,carModel,carSize)\n      .then((res) => {\n        Swal.fire(res.data.message,\"\",\"success\")\n        setCarNum(\"\")\n        setCarModel(\"\")\n      })\n      .catch((err) => console.log(err.response))\n  }\n\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>내 차 등록</strong>\n          </CCardHeader>\n          <CCardBody>\n              <CForm validated={true}>\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    차 번호\n                  </CFormLabel>\n                  <CFormInput type=\"text\" value={carNum} onChange={(e) => setCarNum(e.target.value)} ></CFormInput>\n                  <CFormFeedback invalid>차 번호를 입력해주세요</CFormFeedback>\n                </div>\n\n\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    차 모델\n                  </CFormLabel>\n                  <CFormInput type=\"text\" value={carModel} onChange={(e) => setCarModel(e.target.value)}></CFormInput>\n                  <CFormFeedback invalid>차 모델을 입력해주세요</CFormFeedback>\n                </div>\n\n\n\n                <div className=\"mb-3\">\n                  <CFormLabel htmlFor=\"validationTextarea\" className=\"form-label\">\n                    차 사이즈\n                  </CFormLabel>\n                  <CFormSelect onChange={(e) => setCarSize(e.target.value)} required aria-label=\"select example\">\n                    <option>차 사이즈을 선택해주세요</option>\n\n                    {size.map( (x,index) =>\n                      <option value={x} key={index}>{x}</option>\n                    )}\n\n                  </CFormSelect>\n                  <CFormFeedback invalid>Example invalid select feedback</CFormFeedback>\n                </div>\n\n                <div className=\"mb-3\">\n                  <CButton color=\"primary\" onClick={handleAddCar}>\n                    차 등록하기\n                  </CButton>\n                </div>\n              </CForm>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default MyCar;\n"],"names":["SERVER_PATH","ParkingService","axios","headers","localStorage","getItem","toString","carNumber","carModel","carSize","console","log","mapAddr","x_pos","y_pos","message","placeName","city","email","nickname","password","tel","useState","size","setSize","carNum","setCarNum","setCarModel","setCarSize","useEffect","then","res","data","catch","err","xs","className","validated","htmlFor","type","value","onChange","e","target","invalid","required","map","x","index","color","onClick","Swal","response"],"sourceRoot":""}